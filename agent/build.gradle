plugins {
    id 'com.android.library'
}

android {
    namespace 'com.zebrunner.agent'
    compileSdk 32


    defaultConfig {
        minSdk 26
        //noinspection ExpiredTargetSdkVersion
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    packagingOptions {
        exclude 'META-INF/*'
    }
}



dependencies {

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation 'com.squareup.okhttp3:logging-interceptor:4.10.0'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.fatboyindustrial.gson-javatime-serialisers:gson-javatime-serialisers:1.1.2'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation('org.slf4j:slf4j-api:1.7.36')

    implementation 'com.google.code.gson:gson:2.9.1'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.7.0'
    implementation 'androidx.test.ext:junit:1.1.3'
    implementation 'androidx.test.espresso:espresso-core:3.4.0'
    api("com.zebrunner:agent-core:1.7.1-SNAPSHOT")

    annotationProcessor('org.projectlombok:lombok:1.18.24')
    compileOnly("org.projectlombok:lombok:1.18.24")
}

//afterEvaluate {
//    android.libraryVariants.each {
//        variant -> publishing.publications.create(variant.name, MavenPublication) {
//            from components.findByName(variant.name)
//
//            artifact androidJavadocsJar
//            artifact androidSourcesJar
//
//            groupId 'com.zebrunner.agent'
//            artifactId 'espresso-agent'
//            version '1.0.0'
//
//            //generate pom nodes for dependencies
//            pom.withXml {
////                def dependenciesNode = asNode().appendNode('dependencies')
////                configurations.compile.allDependencies.each { dependency ->
////                    def dependencyNode = dependenciesNode.appendNode('dependency')
////                    dependencyNode.appendNode('groupId', dependency.group)
////                    dependencyNode.appendNode('artifactId', dependency.name)
////                    dependencyNode.appendNode('version', dependency.version)
////                }
//            }
//
//        }
//    }
//}

afterEvaluate {
    publishing{
        publications{
            release(MavenPublication){
                groupId 'com.zebrunner.agent'
                artifactId 'espresso-agent'
                version '1.0.0'
                // Applies the component for the release build variant
                from components.release
                // Adds javadocs and sources as separate jars.
                artifact androidSourcesJar
                artifact androidJavadocsJar
            }
        }
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all {
        varinat -> owner.classpath += varinat.javaCompileProvider.get().classpath
    }
    options {
        memberLevel = JavadocMemberLevel.PROTECTED
    }
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    archiveClassifier.set('javadoc')
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}